#! /usr/bin/python3
import argparse
from src import tcpserver
import logging
import logging.handlers

logger = logging.getLogger(__name__)


def setup_logging(log_filename, log_level):
    if log_level == 'DEBUG':
        log_format = '%(levelname)s %(asctime)s %(pathname)s %(funcName)s %(message)s'
        logging.basicConfig(format=log_format, level=logging.DEBUG)
    else:
        log_format = '%(levelname)s %(asctime)s %(message)s'
        logging.basicConfig(format=log_format, level=logging.INFO)
    console_log = logging.StreamHandler()
    console_log.setLevel(log_level)
    console_log.setFormatter(log_format)
    logger.addHandler(console_log)

    file_log = logging.FileHandler(log_filename)
    file_log.setLevel(log_level)
    file_log.setFormatter(log_format)
    logger.addHandler(file_log)

    rotate_file_log = logging.handlers.RotatingFileHandler(
        log_filename,
        maxBytes=1024,
        backupCount=5)
    logger.addHandler(rotate_file_log)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Argument to be passed.')
    parser.add_argument('-p', '--port',
                        help='port of the web server to be used',
                        default='123',
                        type=int)
    parser.add_argument('-d', '--debug',
                        help='start logging.Debug',
                        default=False,
                        action="store_true")
    parser.add_argument('-l', '--logfile',
                        help='A logfile for Server',
                        default='Server.log')
    args = parser.parse_args()
    port = args.port
    log_filename = args.logfile
    if args.debug:
        log_level = 'DEBUG'
    else:
        log_level = 'INFO'
    setup_logging(log_filename, log_level)
    tcpserver.server_main(port)
